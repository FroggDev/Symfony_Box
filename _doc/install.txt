I ] 1ere Etape : Installation des packages
==========================================

- dans le project lancer dans une console la commande
composer install


II ] 2eme Etape : Configuration de la base de données
=====================================================

dans le fichier .env à la racine de votre projet

configuration de la base
------------------------

###> doctrine/doctrine-bundle ###
# Format described at http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# For an SQLite database, use: "sqlite:///%kernel.project_dir%/var/data.db"
# Configure your db driver and server_version in config/packages/doctrine.yaml
DATABASE_URL=mysql://root:root@127.0.0.1:3306/box
###< doctrine/doctrine-bundle ###

configuration des mails
-----------------------
# FREE SMTP
###> symfony/swiftmailer-bundle ###
# For Gmail as a transport, use: "gmail://username:password@localhost"
# For a generic SMTP server, use: "smtp://localhost:25?encryption=&auth_mode="
# Delivery is disabled by default via "null://localhost"
#MAILER_URL=null://localhost
MAILER_URL=smtp://smtp.free.fr
###< symfony/swiftmailer-bundle ###

# MAILTRAP SMTP
###> symfony/swiftmailer-bundle ###
# For Gmail as a transport, use: "gmail://username:password@localhost"
# For a generic SMTP server, use: "smtp://localhost:25?encryption=&auth_mode="
# Delivery is disabled by default via "null://localhost"
MAILER_URL=smtp://smtp.mailtrap.io:2525?auth_mode=login&username=e5e05820e45013&password=e4ecbcfef4fb67
#Host:
#Port:	25 or 465 or 2525
#Username:	e5e05820e45013
#Password:	e4ecbcfef4fb67
#Auth:	PLAIN, LOGIN and CRAM-MD5
#TLS:	Optional
###< symfony/swiftmailer-bundle ###



si vous avez une configuration differente vous pouvez modifier en fonction des besoins




III ] 3eme Etape : Creation de la base de données
=================================================

- si vous avez déjà une base de donnée avec le nom box, supprimez la (drop database)

- dans le project lancer dans une console la commande
php bin/console doctrine:database:create


IV ] 4eme Etape : Creation de la structure de la base de données
================================================================

- dans le project lancer dans une console la commande afin de verifier que tout soit ok
php bin/console doctrine:schema:validate

- dans le project lancer dans une console la commande afin de creer les operation a effectuer (seulement si modification des entities)
php bin/console doctrine:migrations:diff

- Puis pour exécuter les requètes de creation de la structure :
php bin/console doctrine:migrations:migrate


V ] Felicitation !
==================

- Si toutes les étapes ont été reussie avec succes le site devrait être opérationnel !
pour le tester vous pouvez lancer la commande :
php bin/console server:run

- puis visitez le site à l'adresse :
http://127.0.0.1:8000

- pour visualiser les routes vous pouvez utiliser la commande
php bin/console debug:router

- pour gerer les utilisateurs à partir de la console :
php bin/console app:userManager

- pour charger le cache
php bin/console cache:warmup

- pour decharger le cache :
php bin/console cache:clear

- mails : https://mailtrap.io



























